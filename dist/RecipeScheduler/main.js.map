{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/baby-week-view/baby-week-view.component.css","webpack:///./src/app/baby-week-view/baby-week-view.component.html","webpack:///./src/app/baby-week-view/baby-week-view.component.ts","webpack:///./src/app/recipe-manager/add-recipe/add-recipe.component.css","webpack:///./src/app/recipe-manager/add-recipe/add-recipe.component.html","webpack:///./src/app/recipe-manager/add-recipe/add-recipe.component.ts","webpack:///./src/app/recipe-manager/edit-recipe/edit-recipe.component.css","webpack:///./src/app/recipe-manager/edit-recipe/edit-recipe.component.html","webpack:///./src/app/recipe-manager/edit-recipe/edit-recipe.component.ts","webpack:///./src/app/recipe-manager/models/recipe.ts","webpack:///./src/app/recipe-manager/recipe-manager.component.css","webpack:///./src/app/recipe-manager/recipe-manager.component.html","webpack:///./src/app/recipe-manager/recipe-manager.component.ts","webpack:///./src/app/recipe-manager/recipe-manager.service.ts","webpack:///./src/app/recipe-manager/recipe-pdf-viewer/recipe-pdf-viewer.component.css","webpack:///./src/app/recipe-manager/recipe-pdf-viewer/recipe-pdf-viewer.component.html","webpack:///./src/app/recipe-manager/recipe-pdf-viewer/recipe-pdf-viewer.component.ts","webpack:///./src/app/test-components/test-components.component.css","webpack:///./src/app/test-components/test-components.component.html","webpack:///./src/app/test-components/test-components.component.ts","webpack:///./src/app/tools/confirm-dialog/confirm-dialog.component.css","webpack:///./src/app/tools/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/tools/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/tools/dictionary.ts","webpack:///./src/app/week-view/models/week.ts","webpack:///./src/app/week-view/week-view.component.css","webpack:///./src/app/week-view/week-view.component.html","webpack:///./src/app/week-view/week-view.component.ts","webpack:///./src/app/week-view/week-view.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n<p>Hello there!</p>\\n\"","import { Component } from '@angular/core';\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n} from '@angular/material';\nimport { AppComponent } from './app.component';\nimport { WeekViewComponent } from './week-view/week-view.component';\nimport { RecipeManagerComponent } from './recipe-manager/recipe-manager.component';\nimport { BabyWeekViewComponent } from './baby-week-view/baby-week-view.component';\nimport { WeekViewService } from './week-view/week-view.service';\nimport { TextareaAutosizeModule } from 'ngx-textarea-autosize';\nimport { AddRecipeComponent } from './recipe-manager/add-recipe/add-recipe.component';\nimport { EditRecipeComponent } from './recipe-manager/edit-recipe/edit-recipe.component';\nimport { RecipePdfViewerComponent } from './recipe-manager/recipe-pdf-viewer/recipe-pdf-viewer.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TestComponentsComponent } from './test-components/test-components.component';\nimport { ConfirmDialogComponent } from './tools/confirm-dialog/confirm-dialog.component';\nimport { NgxElectronModule } from 'ngx-electron';\n\nconst appRoutes: Routes = [\n    { path: '', component: RecipeManagerComponent },\n    { path: 'recipe-manager', component: RecipeManagerComponent },\n    { path: 'add-recipe', component: AddRecipeComponent },\n    { path: 'edit-recipe', component: EditRecipeComponent },\n    { path: 'test', component: TestComponentsComponent }\n    // KEEP THESE - Examples of ways to send data to called route\n    // { path: 'crisis-center', component: CrisisListComponent },\n    // { path: 'hero/:id', component: HeroDetailComponent },\n    // {\n    //     path: 'heroes',\n    //     component: HeroListComponent,\n    //     data: { title: 'Heroes List' }\n    // },\n    // {\n    //     path: '',\n    //     redirectTo: '/heroes',\n    //     pathMatch: 'full'\n    // },\n    // { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        WeekViewComponent,\n        RecipeManagerComponent,\n        BabyWeekViewComponent,\n        AddRecipeComponent,\n        EditRecipeComponent,\n        RecipePdfViewerComponent,\n        TestComponentsComponent,\n        ConfirmDialogComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MatNativeDateModule,\n        ReactiveFormsModule,\n        CdkTableModule,\n        CdkTreeModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        NgxElectronModule,\n        RouterModule.forRoot(\n            appRoutes,\n            { enableTracing: true } // <-- debugging purposes only\n        ),\n        TextareaAutosizeModule\n    ],\n    providers: [ WeekViewService ],\n    bootstrap: [ AppComponent ],\n    entryComponents: [ ConfirmDialogComponent ]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<p>\\n  baby-week-view works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-baby-week-view',\n  templateUrl: './baby-week-view.component.html',\n  styleUrls: ['./baby-week-view.component.css']\n})\nexport class BabyWeekViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-container>* {\\n    display: flex;\\n    flex-direction: column;\\n    width: 100%;\\n}\\n\\n.save-recipe-button {\\n    font-size: 20px;\\n    padding-right: 5px;\\n}\\n\\n.recipe-label {\\n    font-size: 22px;\\n    font-weight: 400;\\n}\\n\\n.recipe-name-label {\\n    font-size: 28px;\\n    font-weight: 500;\\n}\\n\\n.recipe-toolbar {\\n    display: flex;\\n    justify-content: space-between;\\n}\\n\\n.recipe-toolbar-select-dropdown {\\n    display: flex;\\n    flex-grow: 2;\\n    width: 100%;\\n}\\n\\n.add-recipe-toolbar-buttons {\\n    margin-right: 10px;\\n}\\n\"","module.exports = \"<mat-toolbar ngClass=\\\"recipe-toolbar\\\">\\n  <label>Create New Recipe</label>\\n  <div>\\n    <button mat-raised-button (click)=\\\"saveRecipe()\\\" ngClass=\\\"add-recipe-toolbar-buttons\\\">\\n      <i class=\\\"fas far fa-save save-recipe-button\\\"></i>\\n      <label>Save</label>\\n    </button>\\n    <button mat-raised-button routerLink=\\\"/recipe-manager\\\" routerLinkActive=\\\"active\\\">\\n      <i class=\\\"fas fa-home save-recipe-button\\\"></i>\\n      <label>Home</label>\\n    </button>\\n  </div>\\n\\n</mat-toolbar>\\n\\n<div class=\\\"example-container\\\">\\n  <mat-form-field floatLabel=\\\"never\\\">\\n    <input ngClass=\\\"recipe-name-label\\\" matInput [(ngModel)]=\\\"newRecipe.recipeViewName\\\" placeholder=\\\"Recipe Name\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <label ngClass=\\\"recipe-label\\\">Ingredients</label>\\n    <textarea autosize matInput [(ngModel)]=\\\"newRecipe.ingredients\\\"></textarea>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <label ngClass=\\\"recipe-label\\\">Prep Instructions</label>\\n    <textarea autosize matInput [(ngModel)]=\\\"newRecipe.prepInstructions\\\"></textarea>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <label ngClass=\\\"recipe-label\\\">Directions</label>\\n    <textarea autosize matInput [(ngModel)]=\\\"newRecipe.directions\\\"></textarea>\\n  </mat-form-field>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../models/recipe';\nimport { RecipeManagerService } from '../recipe-manager.service';\n\n@Component({\n    selector: 'app-add-recipe',\n    templateUrl: './add-recipe.component.html',\n    styleUrls: [ './add-recipe.component.css' ]\n})\nexport class AddRecipeComponent implements OnInit {\n    newRecipe: Recipe = new Recipe();\n    constructor(private recipeService: RecipeManagerService) {}\n\n    ngOnInit() {}\n    saveRecipe() {\n        // TODO - do format and completion of data checks before saving\n        // TODO - if save pressed, then name is altered, and save is pressed again, two recipes with the same name are created\n        this.recipeService.addRecipe(this.newRecipe);\n    }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  edit-recipe works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../models/recipe';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { RecipeManagerService } from '../recipe-manager.service';\n\n@Component({\n    selector: 'app-edit-recipe',\n    templateUrl: './edit-recipe.component.html',\n    styleUrls: [ './edit-recipe.component.css' ]\n})\nexport class EditRecipeComponent implements OnInit {\n    recipe: Observable<Recipe>;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private recipeManagerService: RecipeManagerService\n    ) {}\n\n    ngOnInit() {\n        // this.recipe = this.route.paramMap.pipe(\n        //     switchMap((params: ParamMap) => this.recipeManagerService.getRecipe(params.get('id')))\n        // );\n    }\n}\n","export class Recipe {\n    recipeViewName: string;\n    recipeDataFileName: string;\n    recipePdfFileName: string;\n    ingredients: string;\n    directions: string;\n    prepInstructions: string;\n    nutritionInfo: string;\n    calories: number; // Add more data later, create nutInfo model\n    rating: number; // 1-10 ??\n\n    constructor() {}\n}\n","module.exports = \".example-container>* {\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n}\\n\\n.add-recipe-button {\\n  font-size: 28px;\\n}\\n\\n.recipe-table {\\n  padding: 20px;\\n}\\n\\n.recipe-label {\\n  font-size: 22px;\\n  font-weight: 400;\\n}\\n\\n.recipe-name-label {\\n  font-size: 28px;\\n  font-weight: 500;\\n}\\n\\n.recipe-toolbar {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.recipe-toolbar-select-dropdown {\\n  display: flex;\\n  flex-grow: 2;\\n  width: 100%;\\n}\\n\\n.edit-recipe-button {\\n  font-size: 20px;\\n}\\n\"","module.exports = \"<mat-toolbar ngClass=\\\"recipe-toolbar\\\">\\n  <label>Recipe Manager</label>\\n\\n  <button mat-fab routerLink=\\\"/add-recipe\\\" routerLinkActive=\\\"active\\\">\\n    <i class=\\\"fas fa-plus add-recipe-button\\\"></i>\\n  </button>\\n</mat-toolbar>\\n\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"recipe-table\\\">\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"Name\\\">\\n    <th mat-header-cell *matHeaderCellDef> Recipe Name </th>\\n    <td mat-cell *matCellDef=\\\"let recipe\\\"> {{recipe.recipeViewName}} </td>\\n  </ng-container>\\n\\n  <!-- View Column -->\\n\\n  <!-- Edit Column -->\\n  <ng-container matColumnDef=\\\"Edit\\\">\\n    <th mat-header-cell *matHeaderCellDef> </th>\\n    <td mat-cell *matCellDef=\\\"let recipe\\\">\\n      <button mat-button routerLink=\\\"/edit-recipe\\\" routerLinkActive=\\\"active\\\">\\n        <i class=\\\"fas fa-pencil-alt edit-recipe-button\\\"></i>\\n      </button>\\n    </td>\\n  </ng-container>\\n\\n  <!-- Delete Column -->\\n  <ng-container matColumnDef=\\\"Delete\\\">\\n    <th mat-header-cell *matHeaderCellDef> </th>\\n    <td mat-cell *matCellDef=\\\"let recipe\\\">\\n      <button mat-button (click)=\\\"deleteRecipe(recipe.recipeViewName)\\\">\\n        <i class=\\\"fas fa-trash-alt edit-recipe-button\\\"></i>\\n      </button>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RecipeManagerService } from './recipe-manager.service';\nimport { Recipe } from './models/recipe';\nimport { Dictionary } from '../tools/dictionary';\nimport { ConfirmDialogComponent } from '../tools/confirm-dialog/confirm-dialog.component';\nimport { MatDialogRef, MatDialog } from '@angular/material';\nimport { ElectronService } from 'ngx-electron';\n\n@Component({\n    selector: 'app-recipe-manager',\n    templateUrl: './recipe-manager.component.html',\n    styleUrls: [ './recipe-manager.component.css' ]\n})\nexport class RecipeManagerComponent implements OnInit {\n    recipes = new Dictionary<Recipe>();\n    selectedRecipe: Recipe = new Recipe();\n    displayedColumns = [ 'Name', 'Edit', 'Delete' ];\n    dataSource = this.recipes.Values();\n    dialogRef: MatDialogRef<ConfirmDialogComponent>;\n\n    constructor(\n        public dialog: MatDialog,\n        private recipeManagerService: RecipeManagerService,\n        private _electronService: ElectronService\n    ) {}\n\n    ngOnInit() {\n        this.recipes = this.recipeManagerService.getRecipes();\n        this.dataSource = this.recipes.Values();\n    }\n\n    launchWindow() {\n        this._electronService.shell.openExternal('https://coursetro.com');\n    }\n\n    refreshTable() {\n        this.dataSource = this.recipes.Values();\n    }\n\n    newRecipe() {\n        this.selectedRecipe.recipeViewName = 'Enter New Recipe Name';\n    }\n\n    saveRecipe() {\n        this.recipes.Add(this.selectedRecipe.recipeViewName, this.selectedRecipe);\n    }\n\n    deleteRecipe(recipeName: string) {\n        this.dialogRef = this.dialog.open(ConfirmDialogComponent);\n        this.dialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\n        this.dialogRef.afterClosed().subscribe((result) => {\n            if (result) {\n                this.recipeManagerService.deleteRecipe(recipeName);\n            }\n            this.dialogRef = null;\n            this.refreshTable();\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Recipe } from './models/recipe';\nimport { Dictionary } from '../tools/dictionary';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { ConfirmDialogComponent } from '../tools/confirm-dialog/confirm-dialog.component';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecipeManagerService {\n    recipes = new Dictionary<Recipe>();\n    recipeJsonObject: string;\n\n    constructor() {\n        this.init();\n    }\n\n    init() {\n        // TODO - get info from json file\n\n        const newRecipe = new Recipe();\n\n        newRecipe.recipeViewName = 'Test recipeViewName';\n        newRecipe.directions = 'Test directions';\n        newRecipe.ingredients = 'Test ingredients';\n        newRecipe.prepInstructions = 'Test prepInstructions';\n        newRecipe.recipeDataFileName = 'Test recipeFileName';\n\n        this.recipes.Add(newRecipe.recipeViewName, newRecipe);\n\n        const newRecipe2 = new Recipe();\n        newRecipe2.recipeViewName = 'Test recipeViewName 2';\n        newRecipe2.directions = 'Test directions 2';\n        newRecipe2.ingredients = 'Test ingredients 2';\n        newRecipe2.prepInstructions = 'Test prepInstructions 2';\n        newRecipe2.recipeDataFileName = 'Test recipeFileName 2';\n        this.recipes.Add(newRecipe2.recipeViewName, newRecipe2);\n\n        this.recipeJsonObject = JSON.stringify(this.recipes);\n    }\n\n    getRecipes(): Dictionary<Recipe> {\n        return this.recipes;\n    }\n\n    getRecipe(recipeName: string): Recipe {\n        return this.recipes.Item(recipeName);\n    }\n\n    addRecipe(newRecipe: Recipe) {\n        this.recipes.Add(newRecipe.recipeViewName, newRecipe);\n        this.saveRecipesToJson();\n    }\n\n    saveRecipesToJson() {\n        this.recipeJsonObject = JSON.stringify(this.recipes);\n    }\n\n    updateRecipe(updatedRecipe: Recipe) {\n        if (this.recipes.ContainsKey(updatedRecipe.recipeViewName)) {\n            this.recipes[updatedRecipe.recipeViewName] = updatedRecipe;\n        } else {\n            this.addRecipe(updatedRecipe);\n        }\n\n        this.saveRecipesToJson();\n    }\n\n    deleteRecipe(recipeToDeleteName: string) {\n        if (this.recipes.ContainsKey(recipeToDeleteName)) {\n            this.recipes.Remove(recipeToDeleteName);\n            this.saveRecipesToJson();\n        }\n    }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  recipe-pdf-viewer works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-pdf-viewer',\n  templateUrl: './recipe-pdf-viewer.component.html',\n  styleUrls: ['./recipe-pdf-viewer.component.css']\n})\nexport class RecipePdfViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".tab-group {\\n    display: flex;\\n    margin: 30px;\\n}\\n\"","module.exports = \"<mat-tab-group ngClass=\\\"tab-group\\\">\\n  <mat-tab label=\\\"Recipe\\\">\\n    <app-recipe-manager></app-recipe-manager>\\n  </mat-tab>\\n  <mat-tab label=\\\"Week\\\">\\n    <app-week-view></app-week-view>\\n  </mat-tab>\\n\\n\\n\\n\\n  <mat-tab label=\\\"First\\\">\\n    <mat-checkbox>Check me!</mat-checkbox>\\n    <mat-slide-toggle>Slide me!</mat-slide-toggle>\\n    <mat-radio-group>\\n      <mat-radio-button value=\\\"1\\\">Option 1</mat-radio-button>\\n      <mat-radio-button value=\\\"2\\\">Option 2</mat-radio-button>\\n    </mat-radio-group>\\n  </mat-tab>\\n  <mat-tab label=\\\"Second\\\">\\n    <form class=\\\"example-form\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Favorite food\\\" value=\\\"Sushi\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <textarea matInput placeholder=\\\"Leave a comment\\\"></textarea>\\n      </mat-form-field>\\n\\n      <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\n        <mat-grid-tile *ngFor=\\\"let tile of tiles\\\" [colspan]=\\\"tile.cols\\\" [rowspan]=\\\"tile.rows\\\" [style.background]=\\\"tile.color\\\">\\n          {{tile.text}}\\n        </mat-grid-tile>\\n      </mat-grid-list>\\n\\n    </form>\\n\\n\\n  </mat-tab>\\n  <mat-tab label=\\\"Third\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Favorite food\\\">\\n        <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\n          {{ food.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n\\n  </mat-tab>\\n\\n\\n  <mat-tab label=\\\"Table\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n      <!--- Note that these columns can be defined in any order.\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n      <!-- Position Column -->\\n      <ng-container matColumnDef=\\\"position\\\">\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\n      </ng-container>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n      </ng-container>\\n\\n      <!-- Weight Column -->\\n      <ng-container matColumnDef=\\\"weight\\\">\\n        <th mat-header-cell *matHeaderCellDef> Weight </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\n      </ng-container>\\n\\n      <!-- Symbol Column -->\\n      <ng-container matColumnDef=\\\"symbol\\\">\\n        <th mat-header-cell *matHeaderCellDef> Symbol </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n  </mat-tab>\\n\\n  <mat-tab label=\\\"Forth\\\">\\n\\n    <h3>Basic Buttons</h3>\\n    <div class=\\\"button-row\\\">\\n      <button mat-button>Basic</button>\\n      <button mat-button color=\\\"primary\\\">Primary</button>\\n      <button mat-button color=\\\"accent\\\">Accent</button>\\n      <button mat-button color=\\\"warn\\\">Warn</button>\\n      <button mat-button disabled>Disabled</button>\\n      <a mat-button routerLink=\\\".\\\">Link</a>\\n    </div>\\n\\n    <h3>Raised Buttons</h3>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button>Basic</button>\\n      <button mat-raised-button color=\\\"primary\\\">Primary</button>\\n      <button mat-raised-button color=\\\"accent\\\">Accent</button>\\n      <button mat-raised-button color=\\\"warn\\\">Warn</button>\\n      <button mat-raised-button disabled>Disabled</button>\\n      <a mat-raised-button routerLink=\\\".\\\">Link</a>\\n    </div>\\n\\n    <h3>Icon Buttons</h3>\\n    <div class=\\\"button-row\\\">\\n      <button mat-icon-button>\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n      </button>\\n      <button mat-icon-button color=\\\"primary\\\">\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n      </button>\\n      <button mat-icon-button color=\\\"accent\\\">\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n      </button>\\n      <button mat-icon-button color=\\\"warn\\\">\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n      </button>\\n      <button mat-icon-button disabled>\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n      </button>\\n    </div>\\n\\n    <h3>Fab Buttons</h3>\\n    <div class=\\\"button-row\\\">\\n      <button mat-fab>Basic</button>\\n      <button mat-fab color=\\\"primary\\\">Primary</button>\\n      <button mat-fab color=\\\"accent\\\">Accent</button>\\n      <button mat-fab color=\\\"warn\\\">Warn</button>\\n      <button mat-fab disabled>Disabled</button>\\n      <button mat-fab>\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n      </button>\\n      <a mat-fab routerLink=\\\".\\\">Link</a>\\n    </div>\\n\\n    <h3>Mini Fab Buttons</h3>\\n    <div class=\\\"button-row\\\">\\n      <button mat-mini-fab>Basic</button>\\n      <button mat-mini-fab color=\\\"primary\\\">Primary</button>\\n      <button mat-mini-fab color=\\\"accent\\\">Accent</button>\\n      <button mat-mini-fab color=\\\"warn\\\">Warn</button>\\n      <button mat-mini-fab disabled>Disabled</button>\\n      <button mat-mini-fab>\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n      </button>\\n      <a mat-mini-fab routerLink=\\\".\\\">Link</a>\\n    </div>\\n\\n  </mat-tab>\\n</mat-tab-group>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-test-components',\n    templateUrl: './test-components.component.html',\n    styleUrls: [ './test-components.component.css' ]\n})\nexport class TestComponentsComponent implements OnInit {\n    title = 'app';\n    foods = [\n        { value: 'steak-0', viewValue: 'Steak' },\n        { value: 'pizza-1', viewValue: 'Pizza' },\n        { value: 'tacos-2', viewValue: 'Tacos' }\n    ];\n    tiles = [\n        { text: 'One', cols: 3, rows: 1, color: 'lightblue' },\n        { text: 'Two', cols: 1, rows: 2, color: 'lightgreen' },\n        { text: 'Three', cols: 1, rows: 1, color: 'lightpink' },\n        { text: 'Four', cols: 2, rows: 1, color: '#DDBDF1' }\n    ];\n    displayedColumns = [ 'position', 'name', 'weight', 'symbol' ];\n    dataSource = ELEMENT_DATA;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\nexport interface PeriodicElement {\n    name: string;\n    position: number;\n    weight: number;\n    symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\n];\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Confirm</h1>\\n<div mat-dialog-content>{{confirmMessage}}</div>\\n<div mat-dialog-actions>\\n  <button mat-button style=\\\"color: #fff;background-color: #153961;\\\" (click)=\\\"dialogRef.close(true)\\\">Confirm</button>\\n  <button mat-button (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styleUrls: [ './confirm-dialog.component.css' ]\n})\nexport class ConfirmDialogComponent implements OnInit {\n    constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>) {}\n\n    public confirmMessage: string;\n\n    ngOnInit() {}\n}\n","import { IDictionary } from './idictionary';\n\nexport class Dictionary<T> implements IDictionary<T> {\n    private items: { [index: string]: T } = {};\n\n    private count = 0;\n\n    public ContainsKey(key: string): boolean {\n        return this.items.hasOwnProperty(key);\n    }\n\n    public Count(): number {\n        return this.count;\n    }\n\n    public Add(key: string, value: T) {\n        if (!this.items.hasOwnProperty(key)) {\n            this.count++;\n        }\n\n        this.items[key] = value;\n    }\n\n    public Remove(key: string): T {\n        const val = this.items[key];\n        delete this.items[key];\n        this.count--;\n        return val;\n    }\n\n    public Item(key: string): T {\n        return this.items[key];\n    }\n\n    public Keys(): string[] {\n        const keySet: string[] = [];\n\n        for (const prop in this.items) {\n            if (this.items.hasOwnProperty(prop)) {\n                keySet.push(prop);\n            }\n        }\n\n        return keySet;\n    }\n\n    public Values(): T[] {\n        const values: T[] = [];\n\n        for (const prop in this.items) {\n            if (this.items.hasOwnProperty(prop)) {\n                values.push(this.items[prop]);\n            }\n        }\n\n        return values;\n    }\n}\n","import { Meal } from './meal';\nimport { Dictionary } from '../../tools/dictionary';\n\nexport class Week {\n  constructor(public name: string) {\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-toolbar>\\n  {{title}}\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Select Week\\\">\\n      <mat-option *ngFor=\\\"let week of weeks.Keys()\\\" [value]=\\\"week\\\">\\n        {{ week }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</mat-toolbar>\\n<!-- <table mat-table [dataSource]=\\\"currentWeek\\\" class=\\\"mat-elevation-z8\\\"> -->\\n\\n<!-- Day of the week Column -->\\n<!-- <ng-container *ngFor=\\\"let day of currentWeekDays\\\" matColumnDef={{day.name}}>\\n  <th mat-header-cell *matHeaderCellDef> {{day.name}} </th>\\n  <td mat-cell *matCellDef=\\\"let day\\\"> {{day.meals.name}} </td>\\n</ng-container> -->\\n\\n<!-- \\n  <ng-container matColumnDef='Sunday'>\\n    <th mat-header-cell *matHeaderCellDef> Sunday </th>\\n    <td mat-cell *matCellDef=\\\"let meals\\\"> {{day.meals}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef='Monday'>\\n    <th mat-header-cell *matHeaderCellDef> Monday </th>\\n    <td mat-cell *matCellDef=\\\"let day\\\"> {{day.meals}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef='Tuesday'>\\n    <th mat-header-cell *matHeaderCellDef> Tuesday </th>\\n    <td mat-cell *matCellDef=\\\"let day\\\"> {{day.meals}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef='Wednesday'>\\n    <th mat-header-cell *matHeaderCellDef> Wednesday </th>\\n    <td mat-cell *matCellDef=\\\"let day\\\"> {{day.meals}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef='Thursday'>\\n    <th mat-header-cell *matHeaderCellDef> Thursday </th>\\n    <td mat-cell *matCellDef=\\\"let day\\\"> {{day.meals}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef='Friday'>\\n    <th mat-header-cell *matHeaderCellDef> Friday </th>\\n    <td mat-cell *matCellDef=\\\"let day\\\"> {{day.meals}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef='Saturday'>\\n    <th mat-header-cell *matHeaderCellDef> Saturday </th>\\n    <td mat-cell *matCellDef=\\\"let day\\\"> {{day.meals}} </td>\\n  </ng-container> -->\\n\\n<!-- <ng-container matColumnDef=\\\"position\\\">\\n  <th mat-header-cell *matHeaderCellDef> No. </th>\\n  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\n</ng-container> -->\\n\\n<!-- <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Week } from './models/week';\nimport { WeekViewService } from './week-view.service';\nimport { Dictionary } from '../tools/dictionary';\n\n@Component({\n    selector: 'app-week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.css']\n})\nexport class WeekViewComponent implements OnInit {\n    title = 'Week Editor';\n    displayedColumns = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n    weeks = new Dictionary<Week>();\n    currentWeek: Week;\n\n    constructor(private weekViewService: WeekViewService) {\n        this.initWeeks();\n    }\n\n    initWeeks() {\n        this.weeks = this.weekViewService.getWeeks();\n\n        if (this.weeks.Count() > 0) {\n            this.currentWeek = this.weeks.Item(this.weeks.Keys()[0]);\n        } else {\n            this.currentWeek = this.weeks.Item(this.weeks.Keys()[0]) !== null ? this.weeks[0] : new Week('New Week');\n        }\n    }\n\n    ngOnInit(): void {\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Week } from './models/week';\nimport { Dictionary } from '../tools/dictionary';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WeekViewService {\n    weeks = new Dictionary<Week>();\n\n    constructor() {\n        // TODO - Initialize weeks from file\n        this.weeks.Add('Week 1', new Week('Week 1'));\n    }\n\n    getWeeks(): Dictionary<Week> {\n        if (this.weeks.Count() <= 0) {\n            this.weeks.Add('Week 1', new Week('Week 1'));\n        }\n\n        return this.weeks;\n    }\n\n    // addWeek(newWeek: Week) {\n    //     this.weeks.push(newWeek);\n    // }\n\n    // removeWeek(weekName: string) {\n    //     this.weeks = this.weeks.filter(function (obj) {\n    //         return obj.name !== weekName;\n    //     });\n    // }\n\n    // updateWeek(newWeekData: Week) {\n    //     const updateItem = this.weeks.find(this.findIndexToUpdate, newWeekData.name);\n    //     const index = this.weeks.indexOf(updateItem);\n    //     this.weeks[index] = newWeekData;\n    // }\n\n    // findIndexToUpdate(newItem) {\n    //     return newItem.name === this;\n    // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}